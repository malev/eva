events {}

http {
  server {
      listen 80;
      server_name homer.eva.me;

      access_log /dev/stdout;
      error_log /dev/stdout info;

      location / {
          proxy_pass http://homer:8080/;
      }
  }

  server {
    listen 80;
    server_name pihole.eva.me;

    location / {
      proxy_pass http://pihole:80;
    }

    location /admin/ {
      rewrite /(.*) /$1 break;
      proxy_pass http://pihole;
      proxy_set_header Host $http_host;
    }

    access_log /dev/stdout;
    error_log /var/log/nginx/error.log error;
  }

  server {
    listen 80;
    server_name portainer.eva.me;

    access_log /dev/stdout;
    error_log /dev/stdout info;

    location / {
      proxy_pass https://portainer:9443;
    }
  }

  # server {
  #   listen 80;
  #   server_name plex.eva.me;
  #   set $plex http://plex:32400;

  #   gzip on;
  #   gzip_vary on;
  #   gzip_min_length 1000;
  #   gzip_proxied any;
  #   gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
  #   gzip_disable "MSIE [1-6]\.";

  #   # Forward real ip and host to Plex
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   #When using ngx_http_realip_module change $proxy_add_x_forwarded_for to '$http_x_forwarded_for,$realip_remote_addr'
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;
  #   proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
  #   proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
  #   proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

  #   # Websockets
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection "Upgrade";

  #   # Buffering off send to the client as soon as the data is received from Plex.
  #   proxy_redirect off;
  #   proxy_buffering off;

  #   location / {
  #       proxy_pass $plex;
  #   }
  # }

  server {
    listen 80;
    server_name uptime.eva.me;

    access_log /dev/stdout;
    error_log /dev/stdout info;

    location / {
      proxy_pass http://uptime-kuma:3001;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection "upgrade";
      proxy_set_header   Host $host;
    }
  }

  server {
    listen 80;
    server_name yatch.eva.me;

    access_log /dev/stdout;
    error_log /dev/stdout info;

    location / {
      proxy_pass http://yatch:8000;
    }
  }



  # Default
  server {
    listen 80 default_server;

    server_name _;
    root /var/www/html;

    charset UTF-8;

    error_page 404 /backend-not-found.html;
    location = /backend-not-found.html {
      allow all;
    }

    location / {
      return 404;
    }

    access_log off;
    log_not_found off;
    error_log /var/log/nginx/error.log error;
  }
}